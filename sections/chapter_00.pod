=encoding utf-8

=head0 *Preface

Larry Wall released the first version of Perl in 1987. The language grew from
its niche as a tool for system administrators who needed something more
powerful than shell scripting and easier to use than C programming into a
general-purpose programming language. Perl has a solid history of pragmatism
and, in recent years, a disciplined approach to enhancement and backwards
compatibility.

Over Perl's long history--Perl 5 has been continually refined over the past
twenty years--our understanding of what makes great Perl programs has changed.
While you can write productive programs which never take advantage of all the
language has to offer, the global Perl community has invented, borrowed,
enhanced, and polished ideas and made them available to anyone willing to learn
them.

I<Modern Perl> is a mindset. It's a fresh approach to writing great software
with the Perl programming language. It's how effective Perl programmers write
powerful, maintainable, scalable, concise, and excellent code. It takes
advantage of Perl's extensive library of free software (the CPAN) and language
features designed to multiply your productivity.

=head1 Running Modern Perl

The C<Modern::Perl> module from the CPAN (L<cpan>) allows Perl to warn you of
typos and other potential problems. It also enables new features introduced in
modern Perl releases. Unless otherwise mentioned, all of the code snippets in
this book assume you've started with this basic program skeleton:

=begin programlisting

    #!/usr/bin/env perl

    use Modern::Perl '2015';
    use autodie;

=end programlisting

If you don't have C<Modern::Perl> installed, you could write instead:

=begin programlisting

    #!/usr/bin/env perl

    use 5.016;      # implies "use strict;"
    use warnings;
    use autodie;

=end programlisting

Some examples use testing functions such as C<ok()>, C<like()>, and C<is()>
(L<testing>). The skeleton for these examples is:

=begin programlisting

    #!/usr/bin/env perl

    use Modern::Perl;
    B<use Test::More;>

    # example code here

    B<done_testing();>

=end programlisting

At the time of writing, the current stable major Perl release is Perl 5.22. If
you're using an older version of Perl, you may not be able to run all of the
examples in this book unmodified. The examples in this book work best with Perl
5.16.0 or newer, though we recommend at least Perl 5.20. While the term "Modern
Perl" has traditionally referred to any version of Perl from 5.10.1, the
language has improved dramatically over the past several years.

X<Strawberry Perl>
X<ActivePerl>
X<perlbrew>
X<CPAN; C<App::perlbrew>>

Though Perl comes preinstalled on many operating systems, you may need to
install a more modern version. Windows users, download Strawberry Perl from
U<http://www.strawberryperl.com/> or ActivePerl from
U<http://www.activestate.com/activeperl>. Users of other operating systems with
Perl already installed (and a C compiler and the other development tools),
start by installing the CPAN module
C<App::perlbrew>N<U<http://search.cpan.org/perldoc?App::perlbrew>>.

C<perlbrew> manages multiple Perl installations, so that you can switch between
versions for testing and deployment. You can also install CPAN modules in your
home directory without affecting the system installation. If you've ever had to
beg a system administrator for permission to install software, you'll
appreciate this.

=head1 Credits

This book would not have been possible without questions, comments,
suggestions, advice, wisdom, and encouragement from many, many people. In
particular, the author and editor thank:

L<credits>

Any remaining errors are the fault of the stubborn author.
