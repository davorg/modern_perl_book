=head0 Objects

Every large program has several levels of design. At the bottom, you have
specific details about the problem you're solving. At the top levels, you have
to organize the code so it makes sense. Our only hope to manage this complexity
is to exploit I<abstraction> (treating similar things similarly) and
I<encapsulation> (grouping related details together).

X<OO>
X<objects>
X<OO; classes>
X<classes>

Functions alone are insufficient for large problems. Several techniques group
functions into units of related behaviors; you've already seen higher-order
functions. Another popular technique is I<object orientation> (OO), or I<object
oriented programming> (OOP), where programs work with I<objects>--discrete,
unique entities with their own identities.

L<moose>

L<blessed_references>

L<reflection>

L<advanced_oo>
