=head1 Perldoc

Z<perldoc>

X<perldoc>

Perl respects your time; Perl culture values documentation. The language ships
with thousands of pages of core documentation. The C<perldoc> utility is part
of every complete Perl installation. Your OS may provide this as an additional
package; install C<perl-doc> on Debian or Ubuntu GNU/Linux, for example.
C<perldoc> can display the core docs as well as the documentation of every Perl
module you have installed--whether a core module or one installed from the
Comprehensive Perl Archive Network (CPAN).

=begin sidebar CPAN Documentation

X<CPAN>
X<metacpan>

U<http://perldoc.perl.org/> hosts recent versions of the Perl documentation.
CPAN indexes at U<http://search.cpan.org/> and U<http://metacpan.org/> provide
documentation for all CPAN modules. Other distributions such as ActivePerl and
Strawberry Perl provide local documentation in HTML formats.

=end sidebar

Use C<perldoc> to read the documentation for a module or part of the core
documentation:

=begin screen

    $ B<perldoc List::Util>
    $ B<perldoc perltoc>
    $ B<perldoc Moose::Manual>

=end screen

The first example displays the documentation of the C<List::Util> module; these
docs are in the module itself. The second example is the table of contents of
the core docs. This file is purely documentation. The third example requires
you to install the C<Moose> (L<moose>) CPAN distribution; it displays the
pure-documentation manual. C<perldoc> hides these all of these details for you;
there's no distinction between reading the documentation for a core library
such as C<Data::Dumper> or one installed from the CPAN. Perl culture values
documentation so much that even external libraries follow the good example of
the core language documentation.

The standard documentation template includes a description of the module,
sample uses, and a detailed explanation of the module and its interface. While
the amount of documentation varies by author, the form of the documentation is
remarkably consistent.

=begin tip How to Read the Documentation

Perl has lots of documentation. Where do you start?

C<perldoc perltoc> displays the table of contents of the core documentation,
and C<perldoc perlfaq> is the table of contents for Frequently Asked Questions
about Perl. C<perldoc perlop> and C<perldoc perlsyn> document Perl's symbolic
operators and syntactic constructs. C<perldoc perldiag> explains the meanings
of Perl's warning messages. C<perldoc perlvar> lists all of Perl's symbolic
variables.

You don't have to memorize anything in these docs. Skim them for a great
overview of the language and come back to them when you have questions.

=end tip

X<perldoc; C<-q> (search perlfaq)>

The C<perldoc> utility can do much, much more (see C<perldoc perldoc>).  Use
the C<-q> option with a keyword to search the Perl FAQ.  For example, C<perldoc
-q sort> returns three questions: I<How do I sort an array by (anything)?>,
I<How do I sort a hash (optionally by value instead of key)?>, and I<How can I
always keep my hash sorted?>.

X<perldoc; C<-f> (search perlfunc)>

The C<-f> option shows the documentation for a builtin Perl function, such as
C<perldoc -f sort>. If you don't know the name of the function you want, browse
the list of available builtins in C<perldoc perlfunc>.

X<perldoc; C<-v> (search perlvar)>

The C<-v> option looks up a builtin variable. For example, C<perldoc -v $PID>
explains C<$PID>, which is the variable containing the current program's
process id. Depending on your shell, you may have to quote the variable
appropriately.

The C<-l> option shows the I<path> to the file containing the documentation. (A
module may have a separate F<.pod> file in addition to its F<.pm> file.>)

The C<-m> option displays the entire I<contents> of the module, code and all,
without any special formatting.

X<POD>
X<POD; C<perldoc>>
X<POD; C<podchecker>>
X<POD; C<Pod::Webserver>>
X<CPAN; C<Pod::Webserver>>

Perl uses a documentation format called I<POD>, short for I<Plain Old
Documentation>. C<perldoc perlpod> describes how POD works. Other POD tools
include C<podchecker>, which validates the structure of POD documents, and the
C<Pod::Webserver> CPAN module, which displays local POD as HTML through a
minimal web server.
